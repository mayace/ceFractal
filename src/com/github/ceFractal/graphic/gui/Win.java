/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package com.github.ceFractal.graphic.gui;

import com.github.ceFractal.graphic.Shape;
import com.github.ceFractal.graphic.ConsShape;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Polygon;
import java.awt.Toolkit;
import java.awt.image.BufferedImage;
import java.awt.image.RenderedImage;
import java.io.File;
import java.util.ArrayList;
import javax.imageio.ImageIO;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author erick
 */
public class Win extends javax.swing.JFrame {

    /**
     * Creates new form Ventana_paint
     */
   
    ArrayList<ConsShape> listagm;
    ArrayList<ConsShape> biene;
    public Win(ArrayList<ConsShape> fignew) {
        super("Ejemplo de dibujo");
        initComponents();
        Dimension ven = Toolkit.getDefaultToolkit().getScreenSize();
        this.setBounds((ven.width - this.getWidth())/2, (ven.height - this.getHeight())/2, this.getWidth(), this.getHeight());
        this.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        listagm = new ArrayList();
        this.biene = fignew;
        
        jPanel1.repaint();
        jPanel1.updateUI();
        this.repaint();
    }
    
    public void pintar_fig(ArrayList<ConsShape> todo){
        
        
        for(int j =0; j<todo.size(); j++){
            
            ConsShape tem = todo.get(j);
            if(tem !=null){
                switch (tem.tipo){
                    case 1:
                        //dibuja linea
                        Shape linea = new Shape();
                        linea.FLinea(tem.line_x1,tem.line_y1,tem.line_x2,tem.line_y2,tem.line_r,tem.line_g,tem.line_b,(Graphics2D)jPanel1.getGraphics(),listagm);
                        break;
                    case 2:
                        //aqui se dibuja el texto
                       Shape texto = new Shape();
                       texto.FTexto(tem.txt_Cadena, tem.txt_x1c,tem.txt_y1c,tem.txt_r,tem.txt_g,tem.txt_b,(Graphics2D)jPanel1.getGraphics(), listagm);
                        break;
                    case 3:
                        //aqui se dibuja arco
                        Shape arco = new Shape();
                        arco.FArco(tem.arcox,tem.arcoy, tem.arcoalto,tem.arcoancho,tem.arco_ang_ini,tem.arco_grados,tem.arco_r,tem.arco_g,tem.arco_b,tem.arco_fill,(Graphics2D)jPanel1.getGraphics(), listagm);
                        break;
                    case 4:
                        //aqui dibujo rectangulo
                        Shape rectan = new Shape();
                        rectan.FRectangulo(tem.rectan_x,tem.rectan_y,tem.rectan_alto,tem.rectan_ancho, tem.rectan_r,tem.rectan_g,tem.rectan_b,tem.recta_fill,(Graphics2D)jPanel1.getGraphics(), listagm);
                        break;
                    case 5:
                        Shape ovalo = new Shape();
                        ovalo.FOvalo(tem.ovalo_x1,tem.ovalo_y1,tem.ovalo_ancho,tem.ovalo_alto,tem.ovalo_r,tem.ovalo_g,tem.ovalo_b, tem.ovalo_fill,(Graphics2D)jPanel1.getGraphics(), listagm);
                        break;
                    case 6:
                        Shape poligono = new Shape();
                        poligono.FPoligono(tem.polig_x,tem.polig_y,tem.polig_r, tem.polig_g,tem.arco_b, tem.polig_fill,(Graphics2D)jPanel1.getGraphics(), listagm);
                        break;
                     case 7:
                         //esto aun esta en prueba
                        //Figuras poligono = new Figuras();
                        //poligono.FPoligono(tem.polig_x,tem.polig_y,tem.polig_r, tem.polig_g,tem.arco_b, tem.polig_fill,(Graphics2D)jPanel1.getGraphics(), listagm);
                         jPanel1.setSize(tem.lien_ancho, tem.lien_alto);
                         jPanel1.setBackground(new Color(tem.lien_r, tem.lien_g, tem.lien_b));
                        break;
                    
                }
            }
        }
    
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jToolBar1 = new javax.swing.JToolBar();
        jButton1 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("LIENZO");
        setType(java.awt.Window.Type.POPUP);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 493, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 258, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel1, java.awt.BorderLayout.CENTER);

        jToolBar1.setRollover(true);

        jButton1.setText("Show Image");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton1);

        jButton6.setText("Save as JPG");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        jToolBar1.add(jButton6);

        getContentPane().add(jToolBar1, java.awt.BorderLayout.PAGE_START);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        //Figuras linea = new Figuras();
        //linea.FLinea(0,5,100,50,jPanel1.getGraphics(),listagm);
        //jPanel1.repaint();
        this.pintar_fig(this.biene);
    }//GEN-LAST:event_jButton1ActionPerformed

   
    public RenderedImage crearPNG() {
        //BufferedImage bufferedImage = new BufferedImage(jPanel1.getWidth(), jPanel1.getHeight(), BufferedImage.TYPE_INT_RGB);
        BufferedImage bufferedImage;
        //Graphics2D g2 = bufferedImage.createGraphics();
        Graphics2D g2;
        //g2.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
        Boolean agregarf = false;
        ConsShape tmpe = null;
        for(int i = 0; i<listagm.size(); i++){
            ConsShape tr = listagm.get(i);
            if(tr.tipo ==7){
                agregarf =true;
                tmpe = tr;
                break;
            }
        }
        if(agregarf){
            bufferedImage = new BufferedImage(tmpe.lien_ancho,tmpe.lien_alto, BufferedImage.TYPE_INT_RGB);
            g2 = bufferedImage.createGraphics();
            g2.fillRect(0, 0, tmpe.lien_ancho,tmpe.lien_alto);
            g2.setColor(new Color(tmpe.lien_r,tmpe.lien_g,tmpe.lien_b));
        }else{
            bufferedImage = new BufferedImage(400,400, BufferedImage.TYPE_INT_RGB);
            g2 = bufferedImage.createGraphics();
            Color fondo=new Color(205,205,205);
            g2.fillRect(0, 0, 400,400);
            g2.setColor(fondo);
        }
        //Color fondo=new Color(205,205,205);
        
        //g2.fillRect(0, 0, 1000,1000);
        ConsShape tem=null;
        for (ConsShape listaf1 : listagm) {
            tem = listaf1;
            if(tem !=null){
                //g2.setColor(fondo);
                Crear_figura(g2, tem);
            }
        }
        
        g2.dispose();
        return bufferedImage;

}
public void Crear_figura(Graphics2D g,ConsShape tem){
    
    switch(tem.tipo){
        case 1:
            //aqui se dibuja la linea
        g.setColor(new Color(tem.line_r, tem.line_g, tem.line_b));
        g.drawLine(tem.line_x1, tem.line_y1, tem.line_x2, tem.line_y2);
        
         break;
        case 2:
            //aqui imprimo el texto
        g.setColor(new Color(tem.txt_r, tem.txt_g,tem.txt_b));
        g.setFont(tem.funte);
        g.drawString(tem.txt_Cadena, tem.txt_x1c, tem.txt_y1c);
         break;
        case 3: 
            //aqui dibujo el arco
            g.setColor(new Color(tem.arco_r, tem.arco_g, tem.arco_b));
            if(tem.arco_fill){

                g.fillArc(tem.arcox,tem.arcoy, tem.arcoalto, tem.arcoancho, tem.arco_ang_ini,tem.arco_grados);

            }else{

                g.drawArc(tem.arcox,tem.arcoy, tem.arcoalto, tem.arcoancho, tem.arco_ang_ini,tem.arco_grados);

            }
         break;
        case 4: 
           //aqui se dibuja el rectangulo
            g.setColor(new Color(tem.rectan_r, tem.rectan_g, tem.rectan_b));
            if(tem.recta_fill){
                g.fillRect(tem.rectan_x,tem.rectan_y,tem.rectan_alto,tem.rectan_ancho);
            }else{
                g.drawRect(tem.rectan_x,tem.rectan_y,tem.rectan_alto,tem.rectan_ancho);
            }
         break;
        case 5: 
           //aqui se dibuja el ovalo
  
            g.setColor(new Color(tem.ovalo_r, tem.ovalo_g, tem.ovalo_b));
            if(tem.ovalo_fill){
                g.fillOval(tem.ovalo_x1,tem.ovalo_y1,tem.ovalo_ancho,tem.ovalo_alto);
            }else{
                g.drawOval(tem.ovalo_x1,tem.ovalo_y1,tem.ovalo_ancho,tem.ovalo_alto);
            }
         break;
        case 6: 
           //aqui se dibuja el poligon
            //Polygon pol = new Polygon(tem.polig_x,tem.polig_y,tem.polig_r);
            //g.setColor(Color.DARK_GRAY);
            //g.drawPolygon(pol);
            g.setColor(new Color(tem.polig_r, tem.polig_g,tem.polig_b));
            if(tem.polig_fill){
                g.fillPolygon(tem.polig_ob);
            }else{
                g.drawPolygon(tem.polig_ob);
            }
         break;
          
    }
} 
    
    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        //evento para guardar la imagen 
                  
            JFileChooser fileChooser = new JFileChooser();
            fileChooser.addChoosableFileFilter(new FileNameExtensionFilter("todos los archivos *.jpg", "png"));//filtro para ver solo archivos .edu
            int seleccion = fileChooser.showSaveDialog(null);
            try{
                if (seleccion == JFileChooser.APPROVE_OPTION){//comprueba si ha presionado el boton de aceptar
                    File JFC = fileChooser.getSelectedFile();
                    String PATH = JFC.getAbsolutePath();//obtenemos el path del archivo a guardar
                   
                    try {
                        ImageIO.write(crearPNG(), "png", JFC);
                        } catch (Exception e) {
                        System.err.println("Error al guardar el archivo");
                        e.printStackTrace();
                    }
                    System.err.println(PATH);
                    //comprobamos si a la hora de guardar obtuvo la extension y si no se la asignamos
                    if(!(PATH.endsWith(".png"))){
                        File temp = new File(PATH+".png");
                        JFC.renameTo(temp);//renombramos el archivo
                    }
                    
                    JOptionPane.showMessageDialog(null,"Guardado exitoso!", "Guardado exitoso!", JOptionPane.INFORMATION_MESSAGE);
                }
            }catch (Exception e){//por alguna excepcion salta un mensaje de error
                JOptionPane.showMessageDialog(null,"Error al guardar el archivo!", "Oops! Error", JOptionPane.ERROR_MESSAGE);
            }
                   
          
        
        /*File nuevo = new File("prueba.png");
        try {
             ImageIO.write(crearPNG(), "png", nuevo);
        } catch (Exception e) {
            System.err.println("Error al guardar el archivo");
            e.printStackTrace();
        }*/
    }//GEN-LAST:event_jButton6ActionPerformed

    /**
     * @param args the command line arguments
     */
    //public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        //</editor-fold>

        /* Create and display the form */
       
    //}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JToolBar jToolBar1;
    // End of variables declaration//GEN-END:variables
}
